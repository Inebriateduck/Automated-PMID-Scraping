import pandas as pd
import re

# file path
file_path = r"C:\Users\widaa\Downloads\R Code Project\Data Cleaning\PRAttitudesofAIC_Contacts_36427-72852_Jan1225WAA.xlsx"

# Output file path for invalid rows
output_path = r"C:\Users\widaa\Downloads\R Code Project\Data Cleaning\Invalid_Rows_Output.xlsx"

# Read the Excel file into a DataFrame
try:
    df = pd.read_excel(file_path)
    print("File loaded successfully!")
except FileNotFoundError:
    print("The specified file was not found. Please check the file path.")
    exit()

# Function to validate names (e.g., check for non-standard characters)
def is_name_valid(name):
    # Check for valid characters (letters, spaces, hyphens, and apostrophes)
    return bool(re.match(r"^[A-Za-zÀ-ÖØ-öø-ÿ\s'-]+$", str(name)))

# Function to validate emails
def is_email_valid(email):
    # Basic email validation pattern
    return bool(re.match(r"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$", str(email)))

# Initialize a list to store invalid rows
invalid_rows = []

# Validate each row
for index, row in df.iterrows():
    # Extract the columns
    lastname, firstname, email = row["lastname"], row["firstname"], row["email"]
    
    # Validate each column
    if not is_name_valid(lastname):
        invalid_rows.append({
            "Row Number": index + 1,
            "Column": "lastname",
            "Invalid Value": lastname
        })
    if not is_name_valid(firstname):
        invalid_rows.append({
            "Row Number": index + 1,
            "Column": "firstname",
            "Invalid Value": firstname
        })
    if not is_email_valid(email):
        invalid_rows.append({
            "Row Number": index + 1,
            "Column": "email",
            "Invalid Value": email
        })

# Save invalid rows to an Excel file
if invalid_rows:
    invalid_df = pd.DataFrame(invalid_rows)
    invalid_df.to_excel(output_path, index=False)
    print(f"Invalid rows have been exported to: {output_path}")
else:
    print("All rows are valid! No export needed.")
